{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
    "txHash": "0xb62816863bc68dc43ddb2ba7a23c27bb7921bd63828f091d76eb0907e75b9a07"
  },
  "proxies": [
    {
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "txHash": "0x235166dba797da1b4f220de205a33a94e564311cbaec782922b392b01d8c8542",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f07ca192c3d2b028b98cb500bc0b0b25a50ae2eeef611ade2f4ab2db116a1057": {
      "address": "0xF12b5dd4EAD5F743C6BaA640B0216200e89B60Da",
      "txHash": "0x86493e4fb0ac7a920fe0e76b3010700c5d5f2709e12f749b9b40bc56200c32b5",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:514"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "FractionalNFT",
            "label": "tokenIdToERC20TokenAddress",
            "type": "t_mapping(t_uint256,t_struct(fractionalERC20Tokens)4186_storage)",
            "src": "..\\project:\\contracts\\demoUpgrade.sol:11"
          },
          {
            "contract": "FractionalNFT",
            "label": "tokenIdToJewelleryData",
            "type": "t_mapping(t_uint256,t_struct(Jewellery)4203_storage)",
            "src": "..\\project:\\contracts\\demoUpgrade.sol:11"
          },
          {
            "contract": "FractionalNFT",
            "label": "tokenIdToValuationsData",
            "type": "t_mapping(t_uint256,t_struct(Valuations)4214_storage)",
            "src": "..\\project:\\contracts\\demoUpgrade.sol:11"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(fractionalERC20Tokens)4186_storage)": {
            "label": "mapping(uint256 => struct FractionalNFT.fractionalERC20Tokens)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(fractionalERC20Tokens)4186_storage": {
            "label": "struct FractionalNFT.fractionalERC20Tokens",
            "members": [
              {
                "label": "erc20TokenAddress",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Jewellery)4203_storage)": {
            "label": "mapping(uint256 => struct FractionalNFT.Jewellery)"
          },
          "t_struct(Jewellery)4203_storage": {
            "label": "struct FractionalNFT.Jewellery",
            "members": [
              {
                "label": "nftTokenAddress",
                "type": "t_address"
              },
              {
                "label": "jewelleryMetal",
                "type": "t_string_storage"
              },
              {
                "label": "purity",
                "type": "t_string_storage"
              },
              {
                "label": "netWeight",
                "type": "t_string_storage"
              },
              {
                "label": "grossWeight",
                "type": "t_string_storage"
              },
              {
                "label": "stones",
                "type": "t_string_storage"
              },
              {
                "label": "additional_data",
                "type": "t_string_storage"
              },
              {
                "label": "ownerName",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Valuations)4214_storage)": {
            "label": "mapping(uint256 => struct FractionalNFT.Valuations)"
          },
          "t_struct(Valuations)4214_storage": {
            "label": "struct FractionalNFT.Valuations",
            "members": [
              {
                "label": "nftTokenAddress",
                "type": "t_address"
              },
              {
                "label": "valuationFirm",
                "type": "t_string_storage"
              },
              {
                "label": "timestamp",
                "type": "t_string_storage"
              },
              {
                "label": "valuationData",
                "type": "t_string_storage"
              },
              {
                "label": "updateJewellery",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
